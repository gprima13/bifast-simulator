package com.alto.id.bifast.simulator.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TestCategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestCategoryAllPropertiesEquals(TestCategory expected, TestCategory actual) {
        assertTestCategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertTestCategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestCategoryAllUpdatablePropertiesEquals(TestCategory expected, TestCategory actual) {
        assertTestCategoryUpdatableFieldsEquals(expected, actual);
        assertTestCategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestCategoryAutoGeneratedPropertiesEquals(TestCategory expected, TestCategory actual) {
        assertThat(expected)
            .as("Verify TestCategory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestCategoryUpdatableFieldsEquals(TestCategory expected, TestCategory actual) {
        assertThat(expected)
            .as("Verify TestCategory relevant properties")
            .satisfies(e -> assertThat(e.getTestSuiteName()).as("check testSuiteName").isEqualTo(actual.getTestSuiteName()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTestCategoryUpdatableRelationshipsEquals(TestCategory expected, TestCategory actual) {
        // empty method
    }
}
